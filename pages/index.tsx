import Head from "next/head";
import { PrismaClient, Album } from "@prisma/client";
import styles from "../styles/Home.module.css";
import Card from "../components/Card";
import { useState } from "react";

export const getStaticProps = async () => {
  const prisma = new PrismaClient();
  const albums = await prisma.album.findMany({
    select: {
      record: true,
      cover: true,
      spotify: true,
      Band: {
        select: {
          name: true,
          artist: {
            select: {
              name: true,
            },
          },
        },
      },
    },
  });

  return {
    props: {
      albums,
    },
    revalidate: 10,
  };
};

export default function Home({ albums }) {
  const [field, setField] = useState<any>();
  const [initialAlbums, setInitialAlbums] = useState<Album[]>(albums);

  const addRecord = async (e: any) => {
    e.preventDefault();
    const res = await fetch("/api/album/create", {
      method: "POST",
      body: field,
    });
    if (!res.ok) {
      throw new Error(res.statusText);
    }
    const test = await res.json();
    setInitialAlbums([...initialAlbums, test])
    return test;
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <form onSubmit={addRecord}>
          <input
            type="text"
            name="record"
            id="record"
            onChange={(e) => setField(e.target.value)}
          />
          <input type="submit" value="Send" />
        </form>

        {initialAlbums &&
          initialAlbums.map((album: Album, idx: number) => (
            <Card content={album} key={idx} />
          ))}
      </main>
    </div>
  );
}
